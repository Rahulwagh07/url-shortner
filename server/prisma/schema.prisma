generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  shortCode String   @unique
  urls      Url[]    @relation("CategoryToUrl")
  createdAt DateTime @default(now())
}

model User {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String   @unique
  password    String
  accountType String   @default("User")
  status      String     @default("active")
  token       String?
  resetPasswordExpires DateTime?
  urls        Url[]    @relation("UserToUrl")
  createdAt   DateTime @default(now())
}

model Url {
  id                 Int        @id @default(autoincrement())
  baseUrl            String
  urlName            String     @default("tiny")
  description        String?
  shortUrl           String?
  tier               String     @default("temp")
  category           Category   @relation("CategoryToUrl", fields: [categoryId], references: [id])
  categoryId         Int
  creator            User       @relation("UserToUrl", fields: [creatorId], references: [id])
  creatorId          Int
  status             String     @default("active")
  expirationDate     DateTime?
  createdAt          DateTime   @default(now())

  @@index([tier])
  @@index([status])
}

model TempUrl {
  id        Int      @id @default(autoincrement())
  baseUrl   String
  shortUrl  String   @unique
  createdAt DateTime @default(now())
}

model Panel {
  id             Int      @id @default(autoincrement())
  optionName     String?
  optionIcon     String?
  redirectionUrl String?
  createdAt      DateTime @default(now())
}

model OTP {
  id        Int      @id @default(autoincrement())
  email     String
  otp       String
  createdAt DateTime @default(now())
}

model Global {
  id                       Int      @id @default(autoincrement())
  tempUrlActiveDays        Int      @default(10)
  silverUrlActiveDays      Int      @default(10)
  goldUrlActiveDays        Int      @default(10)
  platinumUrlActiveDays    Int      @default(10)
  reportExpirationDays     Int      @default(10)
  maxReportRecords         Int      @default(10)
  generateReportDisabled   Boolean  @default(false)
  generatedReportDisabled  Boolean  @default(false)
  pauseGeneratedReportDisabled Boolean  @default(false)
  createdAt                DateTime @default(now())
}

model BlockedWord {
  id        Int      @id @default(autoincrement())
  word      String
  createdAt DateTime @default(now())
}

model BlockedDomain {
  id        Int      @id @default(autoincrement())
  domain    String
  createdAt DateTime @default(now())
}

model Visit {
  id                  Int       @id @default(autoincrement())
  country             Country[]
  totalClicks         Int       @default(1)  
  urlId               Int       
  returningVisitor  Int?
  visitor             Visitor[]
  createdAt           DateTime  @default(now())

  @@index([urlId])
}

model Country {
 id          Int       @id @default(autoincrement())  
 visit       Visit     @relation(fields: [visitId], references: [id])
 visitId     Int
 name        String?
 count       Int?
}

model Visitor {
  id          Int       @id @default(autoincrement())   
  visit       Visit     @relation(fields: [visitId], references: [id])
  visitId     Int   
  uniqueVisitorId     String?
  isReturningVisitor Boolean @default(false)
}

model Device {
  id          Int       @id @default(autoincrement()) 
  userId      Int       @unique
  mobile      Int?
  tablet      Int?
  desktop     Int?
  eReader     Int?
  unknown     Int?
}

model Report {
  id          Int       @id @default(autoincrement()) 
  userId      Int       @unique
  reportUrl   String?
  reportGenerated Boolean @default(false)
  createdAt   DateTime  @default(now())
  expiryDate  DateTime?
}